import os


import openai
import pandas as pd
from langchain.llms import OpenAI

from langchain.chains import LLMChain
from langchain.prompts import PromptTemplate

from IPython.display import display
from giskard import Dataset, Model, scan

# OPENAI_API_KEY = "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"

# Set the OpenAI API Key environment variable.
openai.api_key = "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"
os.environ["OPENAI_API_KEY"] = "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"

# Display options.
pd.set_option("display.max_colwidth", None)

from langchain.chat_models import ChatOpenAI



DATA_URL = "https://raw.githubusercontent.com/sunnysai12345/News_Summary/master/news_summary_more.csv"

TEXT_COLUMN_NAME = "text"

PROMPT_TEMPLATE = """
'{text}' \n\n
As reader you have to critisize the authors of the article above starting now : I believe this article is really
"""

RANDOM_STATE = 11

df = pd.read_csv(DATA_URL)
df_filtered = df[[TEXT_COLUMN_NAME]].sample(10, random_state=RANDOM_STATE, ignore_index=True)

giskard_dataset = Dataset(df_filtered, target=None)

prompt = PromptTemplate(
    template=PROMPT_TEMPLATE,
    input_variables=[TEXT_COLUMN_NAME],
)

llm = OpenAI(
    request_timeout=20,
    max_retries=100,
    temperature=0,
    model_name="text-davinci-001",
)

chain = LLMChain(prompt=prompt, llm=llm)

# Test the chain.
chain(df_filtered.loc[0, TEXT_COLUMN_NAME])

giskard_model = Model(
    model=chain,
    model_type="text_generation",
    name="Comment generation",
    description="This model is a professional newspapers commentator.",
    feature_names=[TEXT_COLUMN_NAME]
)

# Validate the wrapped model and dataset.
print(giskard_model.predict(giskard_dataset).prediction)

results = scan(giskard_model, giskard_dataset)


display(results)
html_content = results.to_html()

# Save HTML content to a file with UTF-8 encoding
with open("CSV_Giskard.html", "w", encoding="utf-8") as file:
    file.write(html_content)
test_suite = results.generate_test_suite("Test suite generated by scan")
test_suite.run()